@{
    ViewBag.Title = "Waiting";
    var queueName = ViewBag.QueueName as string;
    var requestId = ViewBag.RequestId as string;
    var position = (int)ViewBag.QueuePosition;
}

<h2>Queue: @queueName</h2>
<p id="position">Your position in queue: @position</p>
<p>Please wait... the system will redirect you when it's your turn.</p>

<script>
    // Poll every 5 seconds to check position
    setInterval(async () => {
        console.log(`[Polling] Checking queue for requestId=@requestId at ${new Date().toISOString()}`);

        try {
            const url = `/queue/checkposition/@queueName/@requestId`;
            console.log("Fetching:", url);

            const response = await fetch(url);
            console.log("Raw response:", response);

            if (!response.ok) {
                console.error("Fetch error:", response.status, response.statusText);
                return;
            }

            const data = await response.json();
            console.log("Response data:", data);

            if (data.position > 0 && data.position <= 100) {
                console.log(`[SUCCESS] Request @requestId is ready. Redirecting to process page.`);
                window.location.href = `/queue/process/@queueName/@requestId`;
            } else if (data.position > 0) {
                console.log(`[INFO] Current position: ${data.position}`);
                document.getElementById("position").innerText =
                    "Your position in queue: " + data.position;
            } else {
                console.warn(`[WARN] Request @requestId not found in queue.`);
                document.getElementById("position").innerText =
                    "You are no longer in the queue (expired or removed).";
            }
        } catch (err) {
            console.error("Exception while fetching position:", err);
        }
    }, 5000);
</script>
